{"version":3,"file":"static/js/4035.8f800013.chunk.js","mappings":"qUAqIA,EA5HqB,WACjB,IAAOA,GAAKC,EAAAA,EAAAA,KAALD,EACAE,GAAYC,EAAAA,EAAAA,IAAc,CAC7BC,iBAAkB,4CADfF,SAQP,GAA8BG,EAAAA,EAAAA,UAAS,CACnC,CACIC,SAAU,IAAIC,OAAOC,OAAOC,KAAKC,OAAO,WAAY,YACpDC,UAAU,EACVC,aACI,iBAAKC,UAAW,SAAS,WACrB,0BACI,gBAAKC,GAAG,UAAUC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAW,UAC3F,iBACIC,EAAE,iRAQd,iBAAKC,GAAI,EAAE,WACP,uBAAG,uBACH,uBAAG,wBACH,uBAAG,6BAKnB,CACId,SAAU,IAAIC,OAAOC,OAAOC,KAAKC,OAAO,WAAY,YACpDC,UAAU,EACVC,aACI,iBAAKC,UAAU,SAAQ,WACnB,0BACI,gBAAKC,GAAG,UAAUC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAW,UAC3F,iBACIC,EAAE,iTAQd,iBAAKN,UAAW,OAAO,WACnB,uBAAG,mEACH,uBAAG,2BACH,uBAAG,+BAKrB,eAjDKQ,EAAO,KAAEC,EAAU,KAgF1B,OACI,UAAC,WAAc,YACX,SAACC,EAAA,EAAU,CAACC,QAAS,KAAMC,GAAI,EAAE,SAAEzB,EAAE,+BACrC,SAAC0B,EAAA,EAAa,CAACC,SAAUC,EAAMC,UAAW,CAACC,GAAI,EAAGC,gBAAiB,oBAAoB,SAE/E7B,IACA,SAAC,KAAS,CACN8B,kBAAmB,CAAChB,MAAO,OAAQC,OAAQ,SAC3CgB,OA7FL,CACXC,IAAK,UACLC,KAAM,YA4FUC,KAAM,GAAG,SAGLf,EAAQgB,KAAI,SAACC,EAAQC,GAAK,OACtB,SAAC,KAAM,CACHC,MAAMC,EAAAA,EAAAA,GAAa,GAAD,OAAIC,EAAAA,GAAY,gBAElCpC,SAAUgC,EAAOhC,SACjBqC,QAAS,kBA7CfC,EA6CuCN,OA5C7DhB,GAAW,WACPD,EAAQgB,KAAI,SAAAC,GACR,OAAIA,IAAWM,GACJ,kBACAN,GAAM,IACT3B,UAAU,IAGX2B,CACX,GACJ,IAXsB,IAAAM,CA6C8C,EAAC,SAExCN,EAAO3B,WACJ,SAAC,KAAU,CAACkC,aAAc,kBAlCpCD,EAkC4DN,OAjClFhB,GAAW,WACPD,EAAQgB,KAAI,SAAAC,GACR,OAAIA,IAAWM,GACJ,kBACAN,GAAM,IACT3B,UAAU,IAGX2B,CACX,GACJ,IAXsB,IAAAM,CAkCmE,EAAC,UACtD,yBAAMN,EAAO1B,iBANhB2B,EASA,UAQzC,C","sources":["app/pages/maps/MapPopupInfo.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {GoogleMap, InfoWindow, Marker, useLoadScript} from \"@react-google-maps/api\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport code from './demo-code/map-popup-info.txt';\r\nimport {ASSET_IMAGES} from \"../../utils/constants/paths\";\r\nimport {getAssetPath} from \"../../utils/appHelpers\";\r\n\r\nconst MapPopupInfo = () => {\r\n    const {t} = useTranslation();\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyCJM0a8oSaRMwxthozENQg1euRI51aNXJQ\",\r\n    })\r\n    const center = {\r\n        lat: 47.646935,\r\n        lng: -122.303763,\r\n    };\r\n\r\n    const [markers, setMarkers] = useState([\r\n        {\r\n            position: new window.google.maps.LatLng(47.646145, -122.303763),\r\n            showInfo: false,\r\n            infoContent: (\r\n                <div className={\"d-flex\"}>\r\n                    <div>\r\n                        <svg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\r\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\r\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\r\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\r\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                    <div ml={1}>\r\n                        <p>UW Medical Center</p>\r\n                        <p>1959 NE Pacific St</p>\r\n                        <p>Seattle, WA 98195</p>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            position: new window.google.maps.LatLng(47.647935, -122.303763),\r\n            showInfo: false,\r\n            infoContent: (\r\n                <div className=\"d-flex\">\r\n                    <div>\r\n                        <svg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\r\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\r\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\r\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\r\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                    <div className={\"ml-2\"}>\r\n                        <p>University of Washington Intramural Activities (IMA) Building</p>\r\n                        <p>3924 Montlake Blvd NE</p>\r\n                        <p>Seattle, WA 98195</p>\r\n                    </div>\r\n                </div>\r\n            ),\r\n        },\r\n    ]);\r\n\r\n    // Toggle to 'true' to show InfoWindow and re-renders simple\r\n    const handleMarkerClick = targetMarker => {\r\n        setMarkers(() => {\r\n            markers.map(marker => {\r\n                if (marker === targetMarker) {\r\n                    return {\r\n                        ...marker,\r\n                        showInfo: true,\r\n                    };\r\n                }\r\n                return marker;\r\n            });\r\n        });\r\n    };\r\n\r\n    const handleMarkerClose = targetMarker => {\r\n        setMarkers(() => {\r\n            markers.map(marker => {\r\n                if (marker === targetMarker) {\r\n                    return {\r\n                        ...marker,\r\n                        showInfo: false,\r\n                    };\r\n                }\r\n                return marker;\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h1\"} mb={3}>{t('pages.title.mapPopupInfo')}</Typography>\r\n            <JumboDemoCard demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n                {\r\n                    isLoaded &&\r\n                    <GoogleMap\r\n                        mapContainerStyle={{width: '100%', height: \"400px\"}}\r\n                        center={center}\r\n                        zoom={15}\r\n                    >\r\n                        {\r\n                            markers.map((marker, index) => (\r\n                                <Marker\r\n                                    icon={getAssetPath(`${ASSET_IMAGES}/marker.png`)}\r\n                                    key={index}\r\n                                    position={marker.position}\r\n                                    onClick={() => handleMarkerClick(marker)}>\r\n\r\n                                    {marker.showInfo && (\r\n                                        <InfoWindow onCloseClick={() => handleMarkerClose(marker)}>\r\n                                            <div>{marker.infoContent}</div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </Marker>\r\n                            ))\r\n                        }\r\n                    </GoogleMap>\r\n                }\r\n            </JumboDemoCard>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MapPopupInfo;\r\n"],"names":["t","useTranslation","isLoaded","useLoadScript","googleMapsApiKey","useState","position","window","google","maps","LatLng","showInfo","infoContent","className","id","xmlns","width","height","viewBox","d","ml","markers","setMarkers","Typography","variant","mb","JumboDemoCard","demoCode","code","wrapperSx","pt","backgroundColor","mapContainerStyle","center","lat","lng","zoom","map","marker","index","icon","getAssetPath","ASSET_IMAGES","onClick","targetMarker","onCloseClick"],"sourceRoot":""}