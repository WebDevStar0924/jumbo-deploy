{"version":3,"file":"static/js/9664.cff91308.chunk.js","mappings":"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","sources":["app/pages/charts/Line/components/data.js","app/pages/charts/Line/components/SimpleLineChart.js","app/pages/charts/Line/components/VerticalLineChart.js","app/pages/charts/Line/components/CustomizedDotLineChart.js","app/pages/charts/Line/components/DashedLineChart.js","app/pages/charts/Line/components/LineChartWithReferenceLines.js","app/pages/charts/Line/components/LineChartWithXAxisPadding.js","app/pages/charts/Line/components/LineChartConnectNulls.js","app/pages/charts/Line/components/SynchronizedLineChart.js","app/pages/charts/Line/Line.js"],"sourcesContent":["const data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nexport default data;\r\n\r\nexport const connectNullData = [\r\n  {name: 'Page A', uv: 4000},\r\n  {name: 'Page B', uv: 3000},\r\n  {name: 'Page C', uv: 2000},\r\n  {name: 'Page D'},\r\n  {name: 'Page E', uv: 1890},\r\n  {name: 'Page F', uv: 2390},\r\n  {name: 'Page G', uv: 3490},\r\n];\r\n","import React from 'react';\r\nimport {\r\n    CartesianGrid, Legend, Line,\r\n    LineChart, ResponsiveContainer, Tooltip,\r\n    XAxis, YAxis\r\n} from 'recharts';\r\nimport data from './data'\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/simple-line-chart.txt';\r\n\r\nconst SimpleLineChart = () => {\r\n    return (\r\n        <JumboDemoCard title={\"Simple line chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Legend/>\r\n                    <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} activeDot={{r: 8}}/>\r\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#e91e63\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </JumboDemoCard>\r\n    );\r\n};\r\n\r\nexport default SimpleLineChart;\r\n","import React from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/vertical-line-chart.txt';\r\n\r\nconst VerticalLineChart = () => {\r\n    return (\r\n        <JumboDemoCard title={\"Vertical Line Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart layout=\"vertical\" data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis type=\"number\"/>\r\n                    <YAxis dataKey=\"name\" type=\"category\"/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Legend/>\r\n                    <Line dataKey=\"pv\" stroke={\"#1e88e5\"}/>\r\n                    <Line dataKey=\"uv\" stroke={\"#e91e63\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </JumboDemoCard>\r\n    );\r\n};\r\n\r\nexport default VerticalLineChart;\r\n","import React from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/customized-dot-line-chart.txt';\r\n\r\nconst CustomizedDot = props => {\r\n    const {cx, cy, value} = props;\r\n    if (value > 2500) {\r\n        return (\r\n            <svg x={cx - 10} y={cy - 10} width={20} height={20} fill=\"green\" viewBox=\"0 0 1024 1024\">\r\n                <path\r\n                    d=\"M512 1009.984c-274.912 0-497.76-222.848-497.76-497.76s222.848-497.76 497.76-497.76c274.912 0 497.76 222.848 497.76 497.76s-222.848 497.76-497.76 497.76zM340.768 295.936c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM686.176 296.704c-39.488 0-71.52 32.8-71.52 73.248s32.032 73.248 71.52 73.248c39.488 0 71.52-32.8 71.52-73.248s-32.032-73.248-71.52-73.248zM772.928 555.392c-18.752-8.864-40.928-0.576-49.632 18.528-40.224 88.576-120.256 143.552-208.832 143.552-85.952 0-164.864-52.64-205.952-137.376-9.184-18.912-31.648-26.592-50.08-17.28-18.464 9.408-21.216 21.472-15.936 32.64 52.8 111.424 155.232 186.784 269.76 186.784 117.984 0 217.12-70.944 269.76-186.784 8.672-19.136 9.568-31.2-9.12-40.096z\"/>\r\n            </svg>\r\n        );\r\n    }\r\n    return (\r\n        <svg x={cx - 10} y={cy - 10} width={20} height={20} fill=\"red\" viewBox=\"0 0 1024 1024\">\r\n            <path\r\n                d=\"M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z\"/>\r\n        </svg>\r\n    );\r\n};\r\n\r\nconst CustomizedDotLineChart = () => (\r\n    <JumboDemoCard title={\"Customized dot line chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} dot={<CustomizedDot/>}/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#e91e63\"}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default CustomizedDotLineChart;\r\n","import React from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/dashed-line-chart.txt';\r\n\r\nconst DashedLineChart = () => (\r\n    <JumboDemoCard title={\"Dashed Line Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} strokeDasharray=\"5 5\"/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#e91e63\"} strokeDasharray=\"3 4 5 2\"/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default DashedLineChart;\r\n","import React from 'react';\r\nimport {\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    ReferenceLine,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/line-chart-with-reference.txt';\r\n\r\nconst LineChartWithReferenceLines = () => (\r\n    <JumboDemoCard title={\"Line Chart with Reference Lines\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <ReferenceLine x=\"Page C\" stroke=\"red\" label=\"Max PV PAGE\"/>\r\n                <ReferenceLine y={9800} label=\"Max\" stroke=\"red\"/>\r\n                <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"}/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#e91e63\"}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default LineChartWithReferenceLines;\r\n","import React from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/line-chart-with-axis.txt';\r\n\r\nconst LineChartWithXAxisPadding = () => (\r\n    <JumboDemoCard title={\"Line Chart with X-Axis Padding\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <LineChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\" padding={{left: 30, right: 30}}/>\r\n                <YAxis/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} activeDot={{r: 8}}/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#e91e63\"}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default LineChartWithXAxisPadding;\r\n","import React from 'react';\r\nimport {CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport code from '../demo-code/line-chart-connect-null.txt';\r\nimport {connectNullData} from \"./data\";\r\n\r\nconst LineChartConnectNulls = () => (\r\n    <JumboDemoCard title={\"Line Chart Connect Nulls\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <Div sx={{mb: 4, flex: 1}}>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart data={connectNullData} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#1e88e5\"} fill={\"#1e88e5\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </Div>\r\n        <Div>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart data={connectNullData} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Line connectNulls={true} type=\"monotone\" dataKey=\"uv\" stroke={\"#1e88e5\"} fill={\"#1e88e5\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </Div>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default LineChartConnectNulls;\r\n","import React from 'react';\r\nimport {\r\n    Area,\r\n    AreaChart,\r\n    Brush,\r\n    CartesianGrid,\r\n    Line,\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from 'recharts';\r\nimport data from \"./data\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport Div from \"@jumbo/shared/Div\";\r\nimport code from '../demo-code/synchronized-line-chart.txt';\r\n\r\nconst SynchronizedLineChart = () => (\r\n    <JumboDemoCard title={\"Synchronized Line Chart\"} demoCode={code} wrapperSx={{flexDirection: 'column', pt: 0, backgroundColor: 'background.paper'}}>\r\n        <Div sx={{mb: 4, alignSelf: 'stretch'}}>\r\n            <Typography variant={\"h5\"} mb={2}>\r\n                A demo of synchronized AreaCharts\r\n            </Typography>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart data={data} syncId=\"anyId\" margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Line type=\"monotone\" dataKey=\"uv\" stroke={\"#1e88e5\"} fill={\"#1e88e5\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </Div>\r\n        <Div sx={{mb: 4, alignSelf: 'stretch'}}>\r\n            <Typography variant={\"h5\"} mb={2}>\r\n                Maybe some other content\r\n            </Typography>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <LineChart data={data} syncId=\"anyId\" margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Line type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} fill={\"#1e88e5\"}/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </Div>\r\n        <Div sx={{alignSelf: 'stretch'}}>\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n                <AreaChart data={data} syncId=\"anyId\" margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                    <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                    <Area type=\"monotone\" dataKey=\"pv\" stroke={\"#1e88e5\"} fill={\"#1e88e5\"}/>\r\n                    <Brush/>\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </Div>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default SynchronizedLineChart;\r\n","import React from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SimpleLineChart from \"./components/SimpleLineChart\";\r\nimport VerticalLineChart from \"./components/VerticalLineChart\";\r\nimport CustomizedDotLineChart from \"./components/CustomizedDotLineChart\";\r\nimport DashedLineChart from \"./components/DashedLineChart\";\r\nimport LineChartWithReferenceLines from \"./components/LineChartWithReferenceLines\";\r\nimport LineChartWithXAxisPadding from \"./components/LineChartWithXAxisPadding\";\r\nimport LineChartConnectNulls from \"./components/LineChartConnectNulls\";\r\nimport SynchronizedLineChart from \"./components/SynchronizedLineChart\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst ChartLine = () => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h1\"} mb={3}>{t('pages.title.chartLine')}</Typography>\r\n            <Stack spacing={3}>\r\n                <SimpleLineChart/>\r\n                <VerticalLineChart/>\r\n                <CustomizedDotLineChart/>\r\n                <DashedLineChart/>\r\n                <LineChartWithReferenceLines/>\r\n                <LineChartWithXAxisPadding/>\r\n                <LineChartConnectNulls/>\r\n                <SynchronizedLineChart/>\r\n            </Stack>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChartLine;\r\n"],"names":["name","uv","pv","amt","connectNullData","JumboDemoCard","title","demoCode","code","wrapperSx","pt","backgroundColor","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","XAxis","dataKey","YAxis","CartesianGrid","strokeDasharray","Tooltip","labelStyle","color","itemStyle","cursor","Legend","Line","type","stroke","activeDot","r","layout","CustomizedDot","props","cx","cy","value","x","y","fill","viewBox","d","dot","ReferenceLine","label","padding","Div","sx","mb","flex","connectNulls","flexDirection","alignSelf","Typography","variant","syncId","AreaChart","Area","Brush","B","t","useTranslation","Stack","spacing"],"sourceRoot":""}