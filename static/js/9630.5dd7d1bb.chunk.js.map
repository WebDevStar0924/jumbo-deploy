{"version":3,"file":"static/js/9630.5dd7d1bb.chunk.js","mappings":"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","sources":["app/pages/charts/Pie/components/data.js","app/pages/charts/Pie/components/TwoLevelPieChart.js","app/pages/charts/Pie/components/StraightAnglePieChart.js","app/pages/charts/Pie/components/CustomActiveShapePieChart.js","app/pages/charts/Pie/components/PieChartWithCustomizedLabel.js","app/pages/charts/Pie/components/TwoSimplePieChart.js","app/pages/charts/Pie/components/PieChartWithPaddingAngle.js","app/pages/charts/Pie/Pie.js"],"sourcesContent":["const data = [\r\n  { name: 'Group A', value: 400 },\r\n  { name: 'Group B', value: 300 },\r\n  { name: 'Group C', value: 300 },\r\n  { name: 'Group D', value: 200 },\r\n  { name: 'Group E', value: 278 },\r\n  { name: 'Group F', value: 189 },\r\n];\r\n\r\nexport const data01 = [\r\n  { name: 'Group A', value: 400 },\r\n  { name: 'Group B', value: 300 },\r\n  { name: 'Group C', value: 300 },\r\n  { name: 'Group D', value: 200 },\r\n];\r\n\r\nexport const data02 = [\r\n  { name: 'A1', value: 100 },\r\n  { name: 'A2', value: 300 },\r\n  { name: 'B1', value: 100 },\r\n  { name: 'B2', value: 80 },\r\n  { name: 'B3', value: 40 },\r\n  { name: 'B4', value: 30 },\r\n  { name: 'B5', value: 50 },\r\n  { name: 'C1', value: 100 },\r\n  { name: 'C2', value: 200 },\r\n  { name: 'D1', value: 150 },\r\n  { name: 'D2', value: 50 },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Pie, PieChart, ResponsiveContainer} from 'recharts';\r\nimport {data01, data02} from './data';\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/two-level-pie.txt';\r\n\r\nconst TwoLevelPieChart = () => (\r\n    <JumboDemoCard title={\"Two Level Pie Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n                <Pie dataKey=\"value\" data={data01} outerRadius={60} fill={\"#1e88e5\"}/>\r\n                <Pie dataKey=\"value\" data={data02} innerRadius={70} outerRadius={90} fill={\"#e91e63\"} label/>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nTwoLevelPieChart.propTypes = {\r\n    dataKey: PropTypes.node,\r\n};\r\nexport default TwoLevelPieChart;\r\n","import React from 'react';\r\nimport {Pie, PieChart, ResponsiveContainer} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/staight-angle-pie.txt';\r\n\r\nconst StraightAnglePieChart = () => (\r\n    <JumboDemoCard title={\"Straight Angle Pie Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n                <Pie dataKey=\"value\" startAngle={270} endAngle={0} data={data} outerRadius={80} fill={\"#1e88e5\"} label/>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default StraightAnglePieChart;\r\n","import React, {useState} from 'react';\r\nimport {Pie, PieChart, ResponsiveContainer, Sector} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/custom-avtive-shape.txt';\r\n\r\nconst renderActiveShape = props => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value} = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n                {payload.name}\r\n            </text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\r\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\r\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst CustomActiveShapePieChart = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const onPieEnter = (data, index) => {\r\n        setActiveIndex(index);\r\n    };\r\n\r\n    return (\r\n        <JumboDemoCard title={\"Custom Active Shape Pie Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                    <Pie\r\n                        dataKey=\"value\"\r\n                        activeIndex={activeIndex}\r\n                        activeShape={renderActiveShape}\r\n                        onMouseEnter={onPieEnter}\r\n                        data={data}\r\n                        innerRadius={60}\r\n                        outerRadius={80}\r\n                        fill={\"#1e88e5\"}\r\n                    />\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </JumboDemoCard>\r\n    );\r\n};\r\n\r\nexport default CustomActiveShapePieChart;\r\n","import React from 'react';\r\nimport {Cell, Pie, PieChart, ResponsiveContainer} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/pie-chart-with-customized.txt';\r\nconst COLORS = ['#1e88e5', '#e91e63', '#FF8C00', '#F44336'];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, index}) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n    );\r\n};\r\n\r\nconst PieChartWithCustomizedLabel = () => {\r\n    return (\r\n        <JumboDemoCard title={\"Pie Chart with Customized Label\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                    <Pie dataKey=\"value\" data={data} labelLine={false} label={renderCustomizedLabel} outerRadius={80}\r\n                         fill={\"#1e88e5\"}>\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={index} fill={COLORS[index % COLORS.length]}/>\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </JumboDemoCard>\r\n    );\r\n};\r\n\r\nexport default PieChartWithCustomizedLabel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Pie, PieChart, ResponsiveContainer, Tooltip} from 'recharts';\r\nimport {data01, data02} from './data';\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/two-simple-pie.txt';\r\n\r\nconst TwoSimplePieChart = () => (\r\n    <JumboDemoCard title={\"Two Simple Pie charts\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n            <PieChart>\r\n                <Pie dataKey=\"value\" isAnimationActive={false} data={data01} cx=\"35%\" cy=\"50%\" outerRadius={80}\r\n                     fill={\"#1e88e5\"} label/>\r\n                <Pie dataKey=\"value\" data={data02} cx=\"70%\" cy=\"50%\" innerRadius={40} outerRadius={80}\r\n                     fill={\"#e91e63\"}/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nTwoSimplePieChart.propTypes = {\r\n    dataKey: PropTypes.node,\r\n};\r\nexport default TwoSimplePieChart;\r\n","import React from 'react';\r\nimport {Cell, Pie, PieChart, ResponsiveContainer} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/pie-chart-with-padding.txt';\r\n\r\nconst COLORS = ['#1e88e5', '#e91e63', '#FF8C00', '#F44336'];\r\n\r\nconst PieChartWithPaddingAngle = () => {\r\n    return (\r\n        <JumboDemoCard title={\"Pie Chart with Padding Angle\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n                <PieChart>\r\n                    <Pie dataKey=\"value\" data={data} cx=\"35%\" cy=\"50%\" innerRadius={60} outerRadius={80} fill=\"#6200EE\"\r\n                         paddingAngle={5}>\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={index} fill={COLORS[index % COLORS.length]}/>\r\n                        ))}\r\n                    </Pie>\r\n                    <Pie\r\n                        dataKey=\"value\"\r\n                        data={data}\r\n                        cx=\"70%\"\r\n                        cy=\"50%\"\r\n                        startAngle={180}\r\n                        endAngle={0}\r\n                        innerRadius={60}\r\n                        outerRadius={80}\r\n                        fill={\"#1e88e5\"}\r\n                        paddingAngle={5}>\r\n                        {data.map((entry, index) => (\r\n                            <Cell key={index} fill={COLORS[index % COLORS.length]}/>\r\n                        ))}\r\n                    </Pie>\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </JumboDemoCard>\r\n    );\r\n};\r\n\r\nexport default PieChartWithPaddingAngle;\r\n","import React from 'react';\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TwoLevelPieChart from \"./components/TwoLevelPieChart\";\r\nimport StraightAnglePieChart from \"./components/StraightAnglePieChart\";\r\nimport CustomActiveShapePieChart from \"./components/CustomActiveShapePieChart\";\r\nimport PieChartWithCustomizedLabel from \"./components/PieChartWithCustomizedLabel\";\r\nimport TwoSimplePieChart from \"./components/TwoSimplePieChart\";\r\nimport PieChartWithPaddingAngle from \"./components/PieChartWithPaddingAngle\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst ChartPie = () => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h1\"} mb={3}>{t('pages.title.chartPie')}</Typography>\r\n            <Grid container spacing={3.75}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TwoLevelPieChart/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <StraightAnglePieChart/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <CustomActiveShapePieChart/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <PieChartWithCustomizedLabel/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TwoSimplePieChart/>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <PieChartWithPaddingAngle/>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChartPie;\r\n"],"names":["data01","name","value","data02","JumboDemoCard","title","demoCode","code","wrapperSx","pt","backgroundColor","ResponsiveContainer","width","height","PieChart","Pie","dataKey","data","outerRadius","fill","innerRadius","label","startAngle","endAngle","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","useState","activeIndex","setActiveIndex","activeShape","onMouseEnter","index","COLORS","renderCustomizedLabel","radius","dominantBaseline","labelLine","entry","Cell","length","isAnimationActive","Tooltip","labelStyle","color","itemStyle","cursor","paddingAngle","t","useTranslation","Typography","variant","mb","Grid","container","spacing","item","xs","md"],"sourceRoot":""}