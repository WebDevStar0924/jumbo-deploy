{"version":3,"file":"static/js/738.6b1bacd3.chunk.js","mappings":"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","sources":["../node_modules/recharts/es6/chart/ComposedChart.js","app/pages/charts/Composed/components/data.js","app/pages/charts/Composed/components/LineBarAreaComposedChart.js","app/pages/charts/Composed/components/VerticalComposedChart.js","app/pages/charts/Composed/components/SameDataComposedChart.js","app/pages/charts/Composed/components/ComposedChartWithAxisLabels.js","app/pages/charts/Composed/Composed.js"],"sourcesContent":["/**\n * @fileOverview Composed Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Area } from '../cartesian/Area';\nimport { Bar } from '../cartesian/Bar';\nimport { Line } from '../cartesian/Line';\nimport { Scatter } from '../cartesian/Scatter';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { ZAxis } from '../cartesian/ZAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var ComposedChart = generateCategoricalChart({\n  chartName: 'ComposedChart',\n  GraphicalChild: [Line, Area, Bar, Scatter],\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }, {\n    axisType: 'zAxis',\n    AxisComp: ZAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","const data = [\r\n  { name: 'Page A', uv: 4000, pv: 2400, amt: 2400 },\r\n  { name: 'Page B', uv: 3000, pv: 1398, amt: 2210 },\r\n  { name: 'Page C', uv: 2000, pv: 9800, amt: 2290 },\r\n  { name: 'Page D', uv: 2780, pv: 3908, amt: 2000 },\r\n  { name: 'Page E', uv: 1890, pv: 4800, amt: 2181 },\r\n  { name: 'Page F', uv: 2390, pv: 3800, amt: 2500 },\r\n  { name: 'Page G', uv: 3490, pv: 4300, amt: 2100 },\r\n];\r\nexport default data;\r\n","import React from 'react';\r\nimport {\r\n    Area,\r\n    Bar,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    Line,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/line-bar-area-composed.txt';\r\n\r\nconst LineBarAreaComposedChart = () => (\r\n    <JumboDemoCard title={\"Different Composed charts\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <ComposedChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                <Area type=\"monotone\" dataKey=\"amt\" fill=\"#e91e63\" stroke=\"#19A6D2\"/>\r\n                <Bar dataKey=\"pv\" barSize={20} fill=\"#1e88e5\"/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#59AA2B\"/>\r\n            </ComposedChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default LineBarAreaComposedChart;\r\n","import React from 'react';\r\nimport {\r\n    Area,\r\n    Bar,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    Line,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/vertical-composed.txt';\r\n\r\nconst VerticalComposedChart = () => (\r\n    <JumboDemoCard title={\"Vertical Composed Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <ComposedChart layout=\"vertical\" data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis type=\"number\"/>\r\n                <YAxis dataKey=\"name\" type=\"category\"/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                <Area dataKey=\"amt\" fill={\"#e91e63\"} stroke=\"#19A6D2\"/>\r\n                <Bar dataKey=\"pv\" barSize={20} fill={\"#1e88e5\"}/>\r\n                <Line dataKey=\"uv\" stroke=\"#59AA2B\"/>\r\n            </ComposedChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default VerticalComposedChart;\r\n","import React from 'react';\r\nimport {Bar, CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/same-data-composed.txt';\r\n\r\nconst SameDataComposedChart = () => (\r\n    <JumboDemoCard title={\"Same Data Composed Chart\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <ComposedChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                <Bar dataKey=\"uv\" barSize={20} fill={\"#1e88e5\"}/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#59AA2B\"/>\r\n            </ComposedChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default SameDataComposedChart;\r\n","import React from 'react';\r\nimport {\r\n    Area,\r\n    Bar,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    Line,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport data from \"./data\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport code from '../demo-code/composed-chart-with-axis.txt';\r\n\r\nconst ComposedChartWithAxisLabels = () => (\r\n    <JumboDemoCard title={\"Composed Chart with Axis Labels\"} demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n            <ComposedChart data={data} margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <XAxis dataKey=\"name\"/>\r\n                <YAxis/>\r\n                <Tooltip labelStyle={{color: 'black'}} itemStyle={{color: 'black'}} cursor={false}/>\r\n                <Legend/>\r\n                <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                <Area type=\"monotone\" dataKey=\"amt\" fill={\"#e91e63\"} stroke=\"#19A6D2\"/>\r\n                <Bar dataKey=\"pv\" barSize={20} fill={\"#1e88e5\"}/>\r\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#59AA2B\"/>\r\n            </ComposedChart>\r\n        </ResponsiveContainer>\r\n    </JumboDemoCard>\r\n);\r\n\r\nexport default ComposedChartWithAxisLabels;\r\n","import React from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport LineBarAreaComposedChart from \"./components/LineBarAreaComposedChart\";\r\nimport VerticalComposedChart from \"./components/VerticalComposedChart\";\r\nimport SameDataComposedChart from \"./components/SameDataComposedChart\";\r\nimport ComposedChartWithAxisLabels from \"./components/ComposedChartWithAxisLabels\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst ChartComposed = () => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h1\"} mb={3}>{t('pages.title.chartComposed')}</Typography>\r\n            <Stack spacing={3}>\r\n                <LineBarAreaComposedChart/>\r\n                <VerticalComposedChart/>\r\n                <SameDataComposedChart/>\r\n                <ComposedChartWithAxisLabels/>\r\n            </Stack>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ChartComposed;\r\n"],"names":["ComposedChart","generateCategoricalChart","chartName","GraphicalChild","Line","Area","Bar","Scatter","axisComponents","axisType","AxisComp","XAxis","YAxis","ZAxis","formatAxisMap","name","uv","pv","amt","JumboDemoCard","title","demoCode","code","wrapperSx","pt","backgroundColor","ResponsiveContainer","width","height","data","margin","top","right","left","bottom","dataKey","Tooltip","labelStyle","color","itemStyle","cursor","Legend","CartesianGrid","stroke","type","fill","barSize","layout","t","useTranslation","Typography","variant","mb","Stack","spacing"],"sourceRoot":""}