{"version":3,"file":"static/js/9112.83d0900d.chunk.js","mappings":"6UASMA,EACFC,KAAaC,UAAUC,YACjBD,UAAUC,YACV,CACEC,mBAAkB,SAACC,EAASC,GACxBA,EAAQ,4CACZ,GA+FZ,EA5FoB,WAChB,IAAOC,GAAKC,EAAAA,EAAAA,KAALD,EACP,EAA4BE,EAAAA,SAAe,MAAK,eAAzCC,EAAM,KAAEC,EAAS,KACxB,EAA8BF,EAAAA,SAAe,MAAK,eAA3CG,EAAO,KAAEC,EAAU,KAC1B,EAA4BJ,EAAAA,SAAe,KAAK,eAAzCK,EAAM,KAAEC,EAAS,KAEjBC,GAAYC,EAAAA,EAAAA,IAAc,CAC7BC,iBAAkB,4CADfF,SA6CP,OAzCAP,EAAAA,WAAgB,WACZ,IAAIU,GAAc,EACZC,EAAO,SAAPA,IACED,IAGJJ,EAAUM,KAAKC,IAAIR,EAAS,GAAI,IAE5BA,EAAS,KACTS,IAAIH,GAEZ,EAyBA,OAxBApB,EAAmBI,oBACf,SAAAoB,GACQL,IAGJR,EAAU,CACNc,IAAKD,EAASE,OAAOC,SACrBC,IAAKJ,EAASE,OAAOG,YAEzBhB,EAAW,+BACXU,IAAIH,GACR,IACA,SAAAU,GACQX,IAIJR,EAAU,CACNc,IAAK,GACLG,IAAK,MAETf,EAAW,0CAAD,OAA2CiB,EAAM,OAC/D,IAEG,WACHX,GAAc,CAClB,CACJ,GAAG,KAGC,UAAC,WAAc,YACX,SAACY,EAAA,EAAU,CAACC,QAAS,KAAMC,GAAI,EAAE,SAAE1B,EAAE,iCACrC,SAAC2B,EAAA,EAAa,CAACC,SAAUC,EAAMC,UAAW,CAACC,GAAI,EAAGC,gBAAiB,oBAAoB,SAE/EvB,IACA,UAAC,KAAS,CACNwB,kBAAmB,CAACC,MAAO,OAAQC,OAAQ,SAC3ChC,OAAQA,EACRiC,KAAM,GAAG,UAGLjC,IACI,SAAC,KAAU,CAACc,SAAUd,EAAO,UACzB,yBAAME,MAKdF,IACI,SAAC,KAAM,CACHA,OAAQA,EACRI,OAAQA,EACR8B,QAAS,CACLC,UAAW,MACXC,YAAa,GACbC,YAAa,QACbC,cAAe,EACfC,aAAc,YAWtD,C,oBC5GA,IAAIhD,IACgB,qBAAXiD,SACPA,OAAOC,WACPD,OAAOC,SAASC,eAGlBC,EAAOC,QAAUrD,C","sources":["app/pages/maps/GeoLocation.js","../node_modules/can-use-dom/index.js"],"sourcesContent":["import React from 'react';\r\nimport canUseDOM from 'can-use-dom';\r\nimport raf from 'raf';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {Circle, GoogleMap, InfoWindow, useLoadScript} from \"@react-google-maps/api\";\r\nimport JumboDemoCard from \"@jumbo/components/JumboDemoCard\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport code from './demo-code/geo-location.txt';\r\n\r\nconst geoLocationExample =\r\n    canUseDOM && navigator.geolocation\r\n        ? navigator.geolocation\r\n        : {\r\n            getCurrentPosition(success, failure) {\r\n                failure(`Your browser doesn't support geolocation.`);\r\n            },\r\n        };\r\n\r\nconst GeoLocation = () => {\r\n    const {t} = useTranslation();\r\n    const [center, setCenter] = React.useState(null);\r\n    const [content, setContent] = React.useState(null);\r\n    const [radius, setRadius] = React.useState(6000);\r\n\r\n    const {isLoaded} = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyCJM0a8oSaRMwxthozENQg1euRI51aNXJQ\",\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        let isUnmounted = false;\r\n        const tick = () => {\r\n            if (isUnmounted) {\r\n                return;\r\n            }\r\n            setRadius(Math.max(radius - 20, 0));\r\n\r\n            if (radius > 200) {\r\n                raf(tick);\r\n            }\r\n        };\r\n        geoLocationExample.getCurrentPosition(\r\n            position => {\r\n                if (isUnmounted) {\r\n                    return;\r\n                }\r\n                setCenter({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                });\r\n                setContent(`Location found using HTML5.`);\r\n                raf(tick);\r\n            },\r\n            reason => {\r\n                if (isUnmounted) {\r\n                    return;\r\n                }\r\n\r\n                setCenter({\r\n                    lat: 60,\r\n                    lng: 105,\r\n                });\r\n                setContent(`Error: The Geolocation service failed (${reason}).`);\r\n            },\r\n        );\r\n        return () => {\r\n            isUnmounted = true;\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h1\"} mb={3}>{t('pages.title.mapGeoLocation')}</Typography>\r\n            <JumboDemoCard demoCode={code} wrapperSx={{pt: 0, backgroundColor: 'background.paper'}}>\r\n                {\r\n                    isLoaded &&\r\n                    <GoogleMap\r\n                        mapContainerStyle={{width: '100%', height: \"400px\"}}\r\n                        center={center}\r\n                        zoom={10}\r\n                    >\r\n                        {\r\n                            center && (\r\n                                <InfoWindow position={center}>\r\n                                    <div>{content}</div>\r\n                                </InfoWindow>\r\n                            )\r\n                        }\r\n                        {\r\n                            center && (\r\n                                <Circle\r\n                                    center={center}\r\n                                    radius={radius}\r\n                                    options={{\r\n                                        fillColor: 'red',\r\n                                        fillOpacity: 0.4,\r\n                                        strokeColor: 'white',\r\n                                        strokeOpacity: 1,\r\n                                        strokeWeight: 1,\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }\r\n                    </GoogleMap>\r\n                }\r\n            </JumboDemoCard>\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default GeoLocation;\r\n","var canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nmodule.exports = canUseDOM;"],"names":["geoLocationExample","canUseDOM","navigator","geolocation","getCurrentPosition","success","failure","t","useTranslation","React","center","setCenter","content","setContent","radius","setRadius","isLoaded","useLoadScript","googleMapsApiKey","isUnmounted","tick","Math","max","raf","position","lat","coords","latitude","lng","longitude","reason","Typography","variant","mb","JumboDemoCard","demoCode","code","wrapperSx","pt","backgroundColor","mapContainerStyle","width","height","zoom","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","window","document","createElement","module","exports"],"sourceRoot":""}